{"version":3,"sources":["redux/actions/ui.ts","types.ts","context/index.tsx","components/SearchField/styles.ts","components/SearchField/SearchField.tsx","components/ShoppingCart/styles.ts","components/ShoppingCart/ShoppingCart.tsx","redux/actions/countries.ts","containers/NavBar/styles.ts","containers/NavBar/NavBar.tsx","components/AddButton/styles.ts","components/AddButton/AddButton.tsx","containers/CountriesList/styles.ts","containers/CountriesList/CountriesList.tsx","components/ThemeMenu/styles.ts","components/ThemeMenu/ThemeMenu.tsx","pages/Home.tsx","pages/Country/styles.ts","pages/Country/Country.tsx","Routes.tsx","App.tsx","serviceWorker.ts","redux/reducers/countries.ts","redux/reducers/ui.ts","redux/reducers/index.ts","services/getAllCountries.ts","redux/sagas/countries.ts","redux/sagas/ui.ts","redux/sagas/index.ts","redux/store.ts","index.tsx"],"names":["toggleMenuOpen","isMenuOpened","type","payload","themes","hazel","color","name","red","blue","yellow","handleSwitchTheme","React","createContext","theme","switchTheme","useStyles","makeStyles","createStyles","inputRoot","inputInput","padding","spacing","paddingLeft","transition","transitions","create","width","breakpoints","up","SearchField","classes","dispatch","useDispatch","InputBase","placeholder","root","input","inputProps","onChange","event","searchKey","target","value","cartCloseIcon","display","justifyContent","paddingRight","cartContainer","marginTop","minWidth","alignItems","textDecoration","backgroundColor","cartHeader","paddingBottom","cartCountry","cartLink","ShoppingCart","anchorEl","isCartOpen","handleCartClose","inCart","useSelector","state","countries","useContext","ThemeContext","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","Typography","component","Box","className","IconButton","edge","aria-label","aria-controls","aria-haspopup","onClick","fontWeight","fontSize","length","Divider","map","flag","key","Grid","container","item","xs","to","src","alt","style","removeCountry","handleRemoveCountry","fill","grow","flexGrow","menuButton","marginRight","title","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","height","pointerEvents","NavBar","useState","setAnchorEl","Boolean","AppBar","Toolbar","variant","noWrap","currentTarget","Badge","badgeContent","button","AddButton","country","isDisabled","undefined","find","inCartCountry","Button","addCountry","disabled","paper","background","image","img","maxWidth","maxHeight","table","tableHead","tablerow","countryName","CountriesList","data","ui","ascendingOrder","setSortOrder","setCountries","useEffect","handleSort","reverse","themeMUI","useTheme","desktopView","useMediaQuery","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableSortLabel","direction","TableBody","filter","toLowerCase","includes","scope","languages","Intl","NumberFormat","useGrouping","format","population","region","language","join","gutterBottom","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","themeIcon","ThemeMenu","handleMenuClose","ClickAwayListener","mouseEvent","touchEvent","onClickAway","Drawer","anchor","List","ListItem","ListItemIcon","ListItemText","primary","Home","CssBaseline","flexDirection","marginBottom","Country","useParams","history","useHistory","Container","goBack","Routes","exact","path","App","setContext","current","context","Provider","window","location","hostname","match","countriesReducer","exception","action","newInCart","uiReducer","createRootReducer","combineReducers","getAllCountries","a","URL","caches","cacheStorage","cacheResponse","ok","add","json","fetchCountries","call","allCountries","sort","b","put","takeLatest","sendInputToReducer","throttle","rootSaga","all","countriesSagas","uiSagas","initState","store","initialState","sagaMiddleware","createSagaMiddleware","middlewares","thunk","composeEnhancers","compose","createStore","applyMiddleware","run","makeStore","WithProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33ef714b.chunk.js","sourcesContent":["import {\r\n  SEARCH_COUNTRY,\r\n  UiAction,\r\n  HANDLE_INPUT_TO_SAGA,\r\n  TOGGLE_MENU,\r\n} from './../../types'\r\n\r\nexport function searchCountry(searchKey: string): UiAction {\r\n  return {\r\n    type: SEARCH_COUNTRY,\r\n    payload: {\r\n      searchKey: searchKey,\r\n    },\r\n  }\r\n}\r\n\r\nexport function handleInputToSaga(searchKey: string): UiAction {\r\n  return {\r\n    type: HANDLE_INPUT_TO_SAGA,\r\n    payload: {\r\n      searchKey: searchKey,\r\n    },\r\n  }\r\n}\r\n\r\nexport function toggleMenuOpen(isMenuOpened: boolean): UiAction {\r\n  return {\r\n    type: TOGGLE_MENU,\r\n    payload: {\r\n      isMenuOpened: isMenuOpened,\r\n    },\r\n  }\r\n}\r\n","export const FETCH_COUNTRIES_FROM_SAGA = 'FETCH_COUNTRIES_FROM_SAGA'\r\nexport const FETCH_COUNTRIES_SUCCEED = 'FETCH_COUNTRIES_SUCCEED'\r\nexport const FETCH_COUNTRIES_FAIL = 'FETCH_COUNTRIES_FAIL'\r\nexport const HANDLE_INPUT_TO_SAGA = 'HANDLE_INPUT_TO_SAGA'\r\nexport const SEARCH_COUNTRY = 'SEARCH_COUNTRY'\r\nexport const ADD_COUNTRY = 'ADD_COUNTRY'\r\nexport const REMOVE_COUNTRY = 'REMOVE_COUNTRY'\r\nexport const TOGGLE_MENU = 'TOGGLE_MENU'\r\n\r\nexport type Country = {\r\n  name: string\r\n  flag: string\r\n  population: number\r\n  languages: { name: string }[]\r\n  region: string\r\n}\r\n\r\nexport type Exception = {\r\n  errorMessage: string\r\n}\r\n\r\nexport type FetchCountriesAction = {\r\n  type: typeof FETCH_COUNTRIES_FROM_SAGA\r\n}\r\n\r\nexport type FetchCountriesSucceedAction = {\r\n  type: typeof FETCH_COUNTRIES_SUCCEED\r\n  payload: {\r\n    countries: Country[]\r\n  }\r\n}\r\n\r\nexport type FetchCountriesFailAction = {\r\n  type: typeof FETCH_COUNTRIES_FAIL\r\n  payload: {\r\n    exception: Exception\r\n  }\r\n}\r\n\r\nexport type AddCountryAction = {\r\n  type: typeof ADD_COUNTRY\r\n  payload: {\r\n    country: Country\r\n  }\r\n}\r\n\r\nexport type RemoveCountryAction = {\r\n  type: typeof REMOVE_COUNTRY\r\n  payload: {\r\n    name: string\r\n  }\r\n}\r\n\r\nexport type SearchCountryAction = {\r\n  type: typeof SEARCH_COUNTRY\r\n  payload: {\r\n    searchKey: string\r\n  }\r\n}\r\n\r\nexport type HandleInputToSagaAction = {\r\n  type: typeof HANDLE_INPUT_TO_SAGA\r\n  payload: {\r\n    searchKey: string\r\n  }\r\n}\r\n\r\nexport type ToggleMenuAction = {\r\n  type: typeof TOGGLE_MENU\r\n  payload: {\r\n    isMenuOpened: boolean\r\n  }\r\n}\r\n\r\n\r\n// Use this union in reducer\r\nexport type UiAction = \r\n| SearchCountryAction\r\n| HandleInputToSagaAction\r\n| ToggleMenuAction\r\n\r\n\r\nexport type CountriesAction =\r\n  | FetchCountriesAction\r\n  | FetchCountriesSucceedAction\r\n  | FetchCountriesFailAction\r\n  | AddCountryAction\r\n  | RemoveCountryAction\r\n\r\n\r\n// Using dynamic keys from an enum\r\nexport type UiState = {\r\n  searchKey: string\r\n  isMenuOpened: boolean\r\n}\r\n\r\nexport type CountriesState = {\r\n  inCart: Country[]\r\n  countries: Country[]\r\n  exception?: Exception\r\n}\r\n\r\nexport type AppState = {\r\n  countries: CountriesState\r\n  ui: UiState\r\n}\r\n","import React from 'react'\r\n\r\nexport const themes = {\r\n  hazel: {\r\n    color: '#8E7618 ',\r\n    name: 'Hazel',\r\n  },\r\n  red: {\r\n    color: '#d3003f',\r\n    name: 'Utah Crimson',\r\n  },\r\n  blue: {\r\n    color: '#000080',\r\n    name: 'Navy Blue',\r\n  },\r\n  yellow: {\r\n    color: '#fcc200',\r\n    name: 'Golden Poppy',\r\n  },\r\n}\r\n\r\nexport const handleSwitchTheme = (color: string) => {\r\n  switch (color) {\r\n  case themes.hazel.color:\r\n    return themes.hazel\r\n  case themes.red.color:\r\n    return themes.red\r\n  case themes.blue.color:\r\n    return themes.blue\r\n  case themes.yellow.color:\r\n    return themes.yellow\r\n  default:\r\n    return themes.red\r\n  }\r\n}\r\n\r\nexport default React.createContext({\r\n  theme: themes.blue,\r\n  switchTheme: (name: string) => {},\r\n})\r\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\n\r\n// SearchField Component\r\n// from MUI\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '50ch',\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\nexport default useStyles\r\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport InputBase from '@material-ui/core/InputBase'\n\nimport { handleInputToSaga } from '../../redux/actions/ui'\nimport useStyles from './styles'\n\n// Detach SearchField Component from Navbar for easier code maintenance\n\nexport default function SearchField() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleInput = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => dispatch(handleInputToSaga(event.target.value))\n\n  return (\n    <InputBase\n      placeholder=\"Search…\"\n      classes={{\n        root: classes.inputRoot,\n        input: classes.inputInput,\n      }}\n      inputProps={{ 'aria-label': 'search' }}\n      onChange={handleInput}\n    />\n  )\n}\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\n// ShoppingCart Component\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cartCloseIcon: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      paddingRight: 20,\n    },\n    cartContainer: {\n      marginTop: 20,\n      display: 'flex',\n      minWidth: 200,\n      paddingLeft: 20,\n      alignItems: 'center',\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: '#f5f5f5',\n      },\n    },\n    cartHeader: {\n      paddingLeft: 20,\n      paddingBottom: 10,\n      minWidth: 200,\n    },\n    cartCountry: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    cartLink: {\n      textDecoration: 'none',\n      color: 'black',\n    },\n  })\n)\n\nexport default useStyles\n","import React, { useContext } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {\r\n  Menu,\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nimport ThemeContext from '../../context'\r\nimport { AppState } from '../../types'\r\nimport { removeCountry } from '../../redux/actions/countries'\r\nimport useStyles from './styles'\r\n\r\ninterface Props {\r\n  anchorEl: HTMLElement | null\r\n  isCartOpen: boolean\r\n  handleCartClose: () => void\r\n}\r\n\r\nconst ShoppingCart: React.FC<Props> = ({\r\n  anchorEl,\r\n  isCartOpen,\r\n  handleCartClose,\r\n}) => {\r\n  const classes = useStyles()\r\n  const inCart = useSelector((state: AppState) => state.countries.inCart)\r\n  const dispatch = useDispatch()\r\n  const { theme } = useContext(ThemeContext)\r\n\r\n  const handleRemoveCountry = (name: string) => dispatch(removeCountry(name))\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id=\"shopping-cart\"\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isCartOpen}\r\n      onClose={handleCartClose}\r\n    >\r\n      <Typography component=\"div\">\r\n        <Box className={classes.cartCloseIcon}>\r\n          <IconButton\r\n            edge=\"end\"\r\n            aria-label=\"close cart\"\r\n            aria-controls={`close cart`}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleCartClose}\r\n            color=\"inherit\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n        <Box\r\n          fontWeight=\"fontWeightBold\"\r\n          fontSize=\"h6.fontSize\"\r\n          className={classes.cartHeader}\r\n        >\r\n          {inCart.length !== 1\r\n            ? `Cart: ${inCart.length} countries`\r\n            : `Cart: 1 country`}\r\n        </Box>\r\n        <Divider />\r\n      </Typography>\r\n      {inCart.map(({ flag, name }) => (\r\n        <li key={name} className={classes.cartContainer}>\r\n          <Grid container>\r\n            <Grid item xs={9} className={classes.cartCountry}>\r\n              <Link\r\n                to={`/react-redux-countries-app/country/${name}`}\r\n                className={classes.cartLink}\r\n              >\r\n                <img\r\n                  src={flag}\r\n                  width={90}\r\n                  alt={flag}\r\n                  style={{ paddingRight: 10 }}\r\n                />\r\n              </Link>\r\n              <Typography>\r\n                <Link\r\n                  to={`/react-redux-countries-app/country/${name}`}\r\n                  className={classes.cartLink}\r\n                  style={{ paddingRight: 20 }}\r\n                >\r\n                  {name}\r\n                </Link>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3} style={{ display: 'flex', alignItems: 'center' }}>\r\n              <IconButton\r\n                edge=\"end\"\r\n                aria-label=\"remove country from cart\"\r\n                aria-controls={`remove ${name} from cart`}\r\n                aria-haspopup=\"true\"\r\n                onClick={() => handleRemoveCountry(name)}\r\n                color=\"inherit\"\r\n              >\r\n                <DeleteIcon style={{ fill: theme.color }} />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </li>\r\n      ))}\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default ShoppingCart\r\n","import {\r\n  FETCH_COUNTRIES_FROM_SAGA,\r\n  FETCH_COUNTRIES_SUCCEED,\r\n  FETCH_COUNTRIES_FAIL,\r\n  ADD_COUNTRY,\r\n  REMOVE_COUNTRY,\r\n  Country,\r\n  CountriesAction,\r\n  Exception,\r\n\r\n} from '../../types'\r\n\r\nexport function fetchCountriesFromSaga(): CountriesAction {\r\n  return {\r\n    type: FETCH_COUNTRIES_FROM_SAGA,\r\n  }\r\n}\r\n\r\nexport function fetchCountriesSucceed(countries: Country[]): CountriesAction {\r\n  return {\r\n    type: FETCH_COUNTRIES_SUCCEED,\r\n    payload: {\r\n      countries: countries,\r\n    },\r\n  }\r\n}\r\n\r\nexport function fetchCountriesFail(exception: Exception): CountriesAction {\r\n  return {\r\n    type: FETCH_COUNTRIES_FAIL,\r\n    payload: {\r\n      exception: exception,\r\n    },\r\n  }\r\n}\r\n\r\nexport function addCountry(country: Country): CountriesAction {\r\n  return {\r\n    type: ADD_COUNTRY,\r\n    payload: {\r\n      country: country,\r\n    },\r\n  }\r\n}\r\n\r\nexport function removeCountry(name: string): CountriesAction {\r\n  return {\r\n    type: REMOVE_COUNTRY,\r\n    payload: {\r\n      name: name,\r\n    },\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\n\r\n//NavBar Component\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  })\r\n)\r\n\r\nexport default useStyles\r\n","import React, { useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Badge,\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\n\nimport ThemeContext from '../../context'\nimport { toggleMenuOpen } from '../../redux/actions'\nimport SearchField from '../../components/SearchField'\nimport ShoppingCart from '../../components/ShoppingCart'\nimport { AppState } from '../../types'\nimport useStyles from './styles'\n\n//MUI component\n\nexport default function NavBar() {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const { theme } = useContext(ThemeContext)\n  const inCart = useSelector((state: AppState) => state.countries.inCart)\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const isCartOpen = Boolean(anchorEl)\n\n  const handleCartOpen = (event: React.MouseEvent<HTMLElement>) =>\n    setAnchorEl(event.currentTarget)\n\n  const handleCartClose = () => setAnchorEl(null)\n\n  const handleMenuOpen = () => dispatch(toggleMenuOpen(true))\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" style={{ backgroundColor: theme.color }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleMenuOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <Link\n              to={`/react-redux-countries-app/`}\n              style={{ textDecoration: 'none', color: 'inherit' }}\n            >\n              Countries\n            </Link>\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <SearchField /> {/* Custom component modified from MUI */}\n          </div>\n          <div className={classes.grow} />\n          <div>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"show cart\"\n              aria-controls=\"shopping-cart\"\n              aria-haspopup=\"true\"\n              onClick={handleCartOpen}\n              color=\"inherit\"\n            >\n              <Badge badgeContent={inCart.length} color=\"secondary\">\n                <ShoppingCartIcon />\n              </Badge>\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <ShoppingCart\n        anchorEl={anchorEl}\n        isCartOpen={isCartOpen}\n        handleCartClose={handleCartClose}\n      />\n    </div>\n  )\n}\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\n\r\n// AddButton Component\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      width: 100,\r\n    },\r\n  })\r\n)\r\n\r\nexport default useStyles\r\n","import React, { useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\n\nimport ThemeContext from '../../context'\nimport { Country, AppState } from '../../types'\nimport { addCountry } from '../../redux/actions/countries'\nimport useStyles from './styles'\n\nconst AddButton: React.FC<{ country: Country }> = ({ country }) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { theme } = useContext(ThemeContext)\n\n  const inCart = useSelector((state: AppState) => state.countries.inCart)\n\n  let isDisabled =\n    inCart.find((inCartCountry) => inCartCountry.name === country.name) !==\n      undefined || false // return true if there's match\n\n  const handleClick = () => dispatch(addCountry(country))\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      className={classes.button}\n      onClick={handleClick}\n      disabled={isDisabled}\n      style={{ backgroundColor: theme.color }}\n    >\n      Add\n    </Button>\n  )\n}\n\nexport default AddButton\n","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\n\n// CountriesList Component\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      [theme.breakpoints.up('md')]: {\n        flexGrow: 0,\n      },\n    },\n    paper: {\n      padding: theme.spacing(2),\n      background: '#F9F9F9',\n    },\n    image: {\n      width: 150,\n    },\n    img: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n    },\n\n    table: {\n      marginTop: 65,\n    },\n    tableHead: {\n      fontWeight: 'bolder',\n    },\n    tablerow: {\n      fontWeight: 'bolder',\n    },\n\n    countryName: {\n      textDecoration: 'none',\n      color: 'black',\n      fontWeight: 'bolder',\n    },\n  })\n)\n\nexport default useStyles\n","import React, { useEffect, useState, useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  useMediaQuery,\n  Grid,\n  Paper,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Divider,\n} from '@material-ui/core'\n\nimport AddButton from '../../components/AddButton'\nimport ThemeContext from '../../context'\nimport { AppState } from '../../types'\nimport useStyles from './styles'\n\nfunction CountriesList() {\n  // countries is already sorted in the saga\n  let data = useSelector((state: AppState) => state.countries.countries)\n  const searchKey = useSelector((state: AppState) => state.ui.searchKey)\n  const [ascendingOrder, setSortOrder] = useState(true)\n  const [countries, setCountries] = useState(data)\n  const { theme } = useContext(ThemeContext)\n\n  useEffect(() => {\n    setCountries(data)\n  }, [data])\n\n  useEffect(() => {}, [ascendingOrder])\n\n  const handleSort = () => {\n    setSortOrder(!ascendingOrder)\n    countries.reverse()\n    setCountries(countries)\n  }\n\n  const classes = useStyles()\n\n  const renderMobile = () => (\n    <div style={{ marginTop: 60 }}>\n      {countries\n        .filter(({ name }) =>\n          name.toLowerCase().includes(searchKey.toLowerCase())\n        )\n        .map((country) => (\n          <div className={classes.root} key={country.name}>\n            <Paper className={classes.paper}>\n              <Grid container direction=\"column\" alignItems=\"center\">\n                <Link\n                  to={`/react-redux-countries-app/country/${country.name}`}\n                  className={classes.image}\n                >\n                  <img\n                    className={classes.img}\n                    src={country.flag}\n                    alt={country.name}\n                  />\n                </Link>\n                <Typography variant=\"h5\">\n                  <Link\n                    to={`/react-redux-countries-app/country/${country.name}`}\n                    className={classes.countryName}\n                    style={{ color: theme.color }}\n                  >\n                    {country.name}\n                  </Link>\n                </Typography>\n                <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n                  Population\n                </Typography>\n                <Typography variant=\"body1\">\n                  {new Intl.NumberFormat('fi-FI', { useGrouping: true }).format(\n                    country.population\n                  )}\n                </Typography>\n                <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n                  Languages\n                </Typography>\n                <Typography variant=\"body1\">\n                  {country.languages\n                    .map((language) => language.name)\n                    .join(', ')}\n                </Typography>\n                <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n                  Region\n                </Typography>\n                <Typography gutterBottom variant=\"body1\">\n                  {country.region}\n                </Typography>\n                <AddButton country={country} />\n                <Divider />\n              </Grid>\n            </Paper>\n          </div>\n        ))}\n    </div>\n  )\n\n  const renderDesktop = () => (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.tableHead}>Flag</TableCell>\n            <TableCell className={classes.tableHead}>\n              <TableSortLabel\n                direction={ascendingOrder ? 'asc' : 'desc'}\n                onClick={handleSort}\n              >\n                Name\n              </TableSortLabel>\n            </TableCell>\n            <TableCell className={classes.tableHead}>Languages</TableCell>\n            <TableCell className={classes.tableHead}>Population</TableCell>\n            <TableCell className={classes.tableHead}>Region</TableCell>\n            <TableCell>{/*button column */}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {countries\n            .filter(({ name }) =>\n              name.toLowerCase().includes(searchKey.toLowerCase())\n            )\n            .map((country) => (\n              <TableRow key={country.name}>\n                <TableCell className={classes.image}>\n                  <Link\n                    to={`/react-redux-countries-app/country/${country.name}`}\n                  >\n                    <img\n                      className={classes.img}\n                      src={country.flag}\n                      alt={country.name}\n                    />\n                  </Link>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Link\n                    to={`/react-redux-countries-app/country/${country.name}`}\n                    className={classes.countryName}\n                  >\n                    {country.name}\n                  </Link>\n                </TableCell>\n                <TableCell>\n                  {country.languages.map(({ name }) => (\n                    <li key={name}>{name}</li>\n                  ))}\n                </TableCell>\n                <TableCell>\n                  {new Intl.NumberFormat('fi-FI', { useGrouping: true }).format(\n                    country.population\n                  )}\n                </TableCell>\n                <TableCell>{country.region}</TableCell>\n                <TableCell>\n                  <AddButton country={country} />\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n\n  // Responsive render\n  const themeMUI = useTheme()\n  const desktopView = useMediaQuery(themeMUI.breakpoints.up('sm')) // min view width = 600px\n\n  return <>{desktopView ? renderDesktop() : renderMobile()}</>\n}\n\nexport default CountriesList\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\n//Drawer Component\n\nconst drawerWidth = 300\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'space-between',\n    },\n    themeIcon: {\n      padding: 15,\n      marginRight: 10,\n      color: 'white',\n      justifyContent: 'center',\n    },\n  })\n)\n\nexport default useStyles\n","import React, { useContext } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  Typography,\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ClickAwayListener,\r\n} from '@material-ui/core'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nimport { AppState } from '../../types'\r\nimport { toggleMenuOpen } from '../../redux/actions/ui'\r\nimport ThemeContext, { themes } from '../../context'\r\nimport useStyles from './styles'\r\n\r\nexport default function ThemeMenu() {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const dispatch = useDispatch()\r\n  let open = useSelector((state: AppState) => state.ui.isMenuOpened)\r\n\r\n  const { switchTheme } = useContext(ThemeContext)\r\n\r\n  const handleMenuClose = () => dispatch(toggleMenuOpen(false))\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ClickAwayListener\r\n        mouseEvent=\"onMouseDown\"\r\n        touchEvent=\"onTouchStart\"\r\n        onClickAway={handleMenuClose}\r\n      >\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <Typography variant=\"h6\" style={{ paddingLeft: 20 }}>\r\n              SWITCH THEME\r\n            </Typography>\r\n            <IconButton onClick={handleMenuClose}>\r\n              {theme.direction === 'ltr' ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            {[themes.hazel, themes.red, themes.blue, themes.yellow].map(\r\n              (theme) => (\r\n                <ListItem\r\n                  button\r\n                  key={theme.color}\r\n                  onClick={() => {\r\n                    switchTheme(theme.color)\r\n                  }}\r\n                >\r\n                  <ListItemIcon\r\n                    className={classes.themeIcon}\r\n                    style={{ backgroundColor: theme.color }}\r\n                  >\r\n                    {theme.name[0]}\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={theme.name} />\r\n                </ListItem>\r\n              )\r\n            )}\r\n          </List>\r\n        </Drawer>\r\n      </ClickAwayListener>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { CssBaseline } from '@material-ui/core'\n\nimport { fetchCountriesFromSaga } from '../redux/actions'\nimport NavBar from '../containers/NavBar'\nimport CountriesList from '../containers/CountriesList'\nimport ThemeMenu from '../components/ThemeMenu'\n\nexport default function Home() {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchCountriesFromSaga())\n  }, [dispatch])\n\n  return (\n    <>\n      <CssBaseline />\n      <ThemeMenu />\n      <NavBar />\n      <CountriesList />\n    </>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    color: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    width: 250,\r\n  },\r\n  img: {\r\n    marginBottom: 50,\r\n    display: 'block',\r\n    maxWidth: 200,\r\n    maxHeight: '100%',\r\n  },\r\n}))\r\n\r\nexport default useStyles\r\n","import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport { Typography, Container, Button } from '@material-ui/core'\n\nimport ThemeContext from '../../context'\nimport { AppState } from '../../types'\nimport useStyles from './styles'\n\nexport default function Country() {\n  const { theme } = useContext(ThemeContext)\n  const { name } = useParams()\n  const history = useHistory()\n  const classes = useStyles()\n\n  const country = useSelector((state: AppState) =>\n    state.countries.countries.find(\n      (country) => country.name.toLowerCase() === name.toLowerCase()\n    )\n  )\n  if (!country) {\n    return <div>Country not available</div>\n  }\n  return (\n    <Container\n      className={classes.container}\n      maxWidth={false}\n      style={{ backgroundColor: theme.color }}\n    >\n      <img className={classes.img} src={country.flag} alt={country.name} />\n      <Typography variant=\"h5\">{country.name}</Typography>\n      <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n        Population\n      </Typography>\n      <Typography variant=\"body1\">\n        {new Intl.NumberFormat('fi-FI', { useGrouping: true }).format(\n          country.population\n        )}\n      </Typography>\n      <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n        Languages\n      </Typography>\n      <Typography variant=\"body1\">\n        {country.languages.map((language) => language.name).join(', ')}\n      </Typography>\n      <Typography variant=\"body1\" style={{ fontWeight: 'bold' }}>\n        Region\n      </Typography>\n      <Typography gutterBottom variant=\"body1\">\n        {country.region}\n      </Typography>\n      <Button\n        variant=\"contained\"\n        style={{ backgroundColor: 'white' }}\n        onClick={() => history.goBack()}\n      >\n        Go back\n      </Button>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Country from './pages/Country/Country'\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/react-redux-countries-app\" component={Home} />\n    <Route\n      exact\n      path=\"/react-redux-countries-app/country/:name\"\n      component={Country}\n    />\n  </Switch>\n)\n\nexport default Routes\n","import React, { useState } from 'react'\r\n\r\nimport Routes from './Routes'\r\nimport ThemeContext, { themes, handleSwitchTheme } from './context'\r\n\r\nexport default function App() {\r\n  const [context, setContext] = useState({\r\n    theme: themes.red,\r\n    switchTheme: (color: string) => {\r\n      setContext((current) => ({\r\n        ...current,\r\n        theme: handleSwitchTheme(color),\r\n      }))\r\n    },\r\n  })\r\n\r\n  return (\r\n    <ThemeContext.Provider value={context}>\r\n      <Routes />\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  CountriesAction,\r\n  CountriesState,\r\n  FETCH_COUNTRIES_SUCCEED,\r\n  FETCH_COUNTRIES_FAIL,\r\n  ADD_COUNTRY,\r\n  REMOVE_COUNTRY,\r\n} from '../../types'\r\n\r\nfunction countriesReducer(\r\n  state: CountriesState = {\r\n    inCart: [],\r\n    countries: [],\r\n    exception: undefined,\r\n  },\r\n  action: CountriesAction\r\n): CountriesState {\r\n  switch (action.type) {\r\n    \r\n  case FETCH_COUNTRIES_SUCCEED: {\r\n    const { countries } = action.payload\r\n    return { ...state, countries: [...countries] }\r\n  }\r\n\r\n  case FETCH_COUNTRIES_FAIL: {\r\n    const { exception } = action.payload\r\n    return { ...state, exception: exception }\r\n  }\r\n\r\n  case ADD_COUNTRY: {\r\n    const { country } = action.payload\r\n    return { ...state, inCart: [...state.inCart, country] }\r\n  }\r\n\r\n  case REMOVE_COUNTRY: {\r\n    const { name } = action.payload\r\n    // filter out the country from inCart\r\n    const newInCart = state.inCart.filter(country => country.name !== name )\r\n    return { ...state, inCart: [...newInCart] }\r\n  }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default countriesReducer\r\n","import { UiState, UiAction, SEARCH_COUNTRY, TOGGLE_MENU } from './../../types'\r\n\r\nfunction uiReducer(\r\n  state: UiState = {\r\n    searchKey: '',\r\n    isMenuOpened: false,\r\n  },\r\n  action: UiAction\r\n): UiState {\r\n  switch (action.type) {\r\n  case SEARCH_COUNTRY: {\r\n    const { searchKey } = action.payload\r\n    return { ...state, searchKey: searchKey }\r\n  }\r\n  case TOGGLE_MENU: {\r\n    const { isMenuOpened } = action.payload\r\n    return { ...state, isMenuOpened: isMenuOpened }\r\n  }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default uiReducer\r\n","import { combineReducers } from 'redux'\r\n\r\nimport countriesReducer from './countries'\r\nimport uiReducer from './ui'\r\n\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    countries: countriesReducer,\r\n    ui: uiReducer\r\n  })\r\n\r\nexport default createRootReducer\r\n","export async function getAllCountries() {\n  const URL = 'https://restcountries.eu/rest/v2/all'\n  const cacheStorage = await caches.open('AllCountries')\n  let cacheResponse = await cacheStorage.match(URL)\n\n  if (!cacheResponse || !cacheResponse.ok) {\n    await cacheStorage.add(URL)\n    cacheResponse = await cacheStorage.match(URL)\n  }\n\n  return await cacheResponse?.json()\n}\n","import { takeLatest, call, put } from 'redux-saga/effects'\n\nimport { FETCH_COUNTRIES_FROM_SAGA, Country } from './../../types'\nimport { fetchCountriesSucceed, fetchCountriesFail } from '../actions'\nimport { getAllCountries } from '../../services/getAllCountries'\n\nfunction* fetchCountries() {\n  try {\n    const allCountries: Country[] = yield call(getAllCountries)\n\n    // sort countries name in ascending order\n    allCountries.sort((a, b) => (a.name > b.name ? 1 : -1))\n\n    yield put(fetchCountriesSucceed(allCountries))\n  } catch (exception) {\n    yield put(fetchCountriesFail(exception))\n  }\n}\n\nexport default [takeLatest(FETCH_COUNTRIES_FROM_SAGA, fetchCountries)]\n","import { put, throttle } from 'redux-saga/effects'\r\n\r\nimport { searchCountry } from '../actions'\r\nimport { HANDLE_INPUT_TO_SAGA, HandleInputToSagaAction } from './../../types'\r\n\r\nfunction* sendInputToReducer(action: HandleInputToSagaAction) {\r\n  yield put(searchCountry(action.payload.searchKey))\r\n}\r\n\r\n// only send dispatch every 1 second, ignore everything in the meantime\r\nexport default [throttle(1000, HANDLE_INPUT_TO_SAGA, sendInputToReducer)]\r\n","import { all } from 'redux-saga/effects'\r\n\r\nimport countriesSagas from './countries'\r\nimport uiSagas from './ui'\r\n\r\nexport default function* rootSaga() {\r\n  yield all([...countriesSagas, ...uiSagas])\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport thunk from 'redux-thunk'\n\nimport { AppState } from '../types'\nimport createRootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst initState: AppState = {\n  countries: {\n    inCart: [],\n    countries: [],\n    exception: undefined,\n  },\n  ui: {\n    searchKey: '',\n    isMenuOpened: false,\n  },\n}\n\nexport default function makeStore(initialState = initState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = [sagaMiddleware, thunk]\n  let composeEnhancers = compose\n\n  if (process.env.NODE_ENV === 'development') {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        trace: true,\n        traceLimit: 25,\n      })\n    }\n  }\n\n  const store = createStore(\n    createRootReducer(),\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n\n  sagaMiddleware.run(rootSaga)\n\n  if ((module as any).hot) {\n    ;(module as any).hot.accept('./reducers', () => {\n      const nextReducer = require('./reducers').default\n      store.replaceReducer(nextReducer)\n    })\n  }\n\n  return store\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport makeStore from './redux/store'\r\n\r\nconst store = makeStore()\r\n\r\nconst WithProvider = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(<WithProvider />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}